BluetoothManager.swift - centralManager(_:willRestoreState:)#300: No restored peripherals!
BluetoothManager.swift - centralManagerDidUpdateState(_:)#236: 5
NightscoutManager.swift - subscribe() - 68 DEV: Network status: reachable by WiFi
HealthKitManager.swift - init(resolver:) - 95 DEV: HealthKitManager did create
FetchGlucoseManager.swift - subscribe() - 63 DEV: FetchGlucoseManager heartbeat
FetchGlucoseManager.swift - subscribe() - 64 DEV: Start fetching glucose
FetchTreatmentsManager.swift - subscribe() - 26 DEV: FetchTreatmentsManager heartbeat
FetchTreatmentsManager.swift - subscribe() - 27 DEV: Start fetching carbs and temptargets
NetworkService.swift - run(_:) - 17 DEV: GET  ***/api/v1/treatments.json?find%5Bcarbs%5D%5B$exists%5D=true&find%5BenteredBy%5D%5B$ne%5D=freeaps-x&find%5BenteredBy%5D%5B$ne%5D=freeaps-x&find%5Bcreated_at%5D%5B$gt%5D=2025-09-19T01:11:29.679Z
Couldn't read values in CFPrefsPlistSource<0x154704300> (Domain: group.ru.zamot.freeeapsx, User: kCFPreferencesAnyUser, ByHost: Yes, Container: (null), Contents Need Refresh: Yes): Using kCFPreferencesAnyUser with a container is only allowed for System Containers, detaching from cfprefsd
HealthKitManager.swift - fetch() - 298 DEV: Start fetching HealthKitManager
NetworkService.swift - run(_:) - 17 DEV: GET  ***/api/v1/treatments.json?find%5BeventType%5D=Temporary+Target&find%5BenteredBy%5D%5B$ne%5D=freeaps-x&find%5BenteredBy%5D%5B$ne%5D=freeaps-x&find%5Bduration%5D%5B$exists%5D=true&find%5Bcreated_at%5D%5B$gt%5D=2025-09-19T01:11:30.464Z
HealthKitManager.swift - fetch() - 300 DEV: HealthKitManager cant return any data, because useAppleHealth option is disable
FetchGlucoseManager.swift - subscribe() - 75 DEV: SyncDate is 2025-09-20 01:03:03 +0000
UserNotificationsManager.swift - requestNotificationPermissionsIfNeeded() - 288 DEV: UNUserNotificationCenter.authorizationStatus: UNAuthorizationStatus(rawValue: 2)
WatchManager.swift - session(_:activationDidCompleteWith:error:) - 237 DEV: WCSession is activated: true
Application context data is nil
WatchManager.swift - session(_:activationDidCompleteWith:error:) - 246 DEV: WCSession activated successfully
WatchManager.swift - session(_:activationDidCompleteWith:error:) - 248 DEV: Watch is paired
WatchManager.swift - session(_:activationDidCompleteWith:error:) - 256 DEV: Watch app is not installed
Application context data is nil
WCSession counterpart app not installed
WatchManager.swift - sendState() - 103 DEV: Watch app not installed, skipping sendState
FreeAPSApp.swift - body - 53 DEV: APPLICATION PHASE: active
MedtrumPumpManager.swift - activatePatch(_:)#688: Activate patch pump...
BluetoothManager.swift - connect(peripheral:)#68: Connecting to <CBPeripheral: 0x15465c8c0, identifier = F847EF3E-B1A7-875E-EB89-9EBF0DE9516E, name = MT, mtu = 23, state = connected>
BluetoothManager.swift - centralManager(_:didConnect:)#285: Connected to pump: MT!
PeripheralManager.swift - peripheral(_:didDiscoverCharacteristicsFor:error:)#284: Enable notify for: 669A9120-0008-968F-E311-6050405558B3
PeripheralManager.swift - peripheral(_:didDiscoverCharacteristicsFor:error:)#284: Enable notify for: 669A9141-0008-968F-E311-6050405558B3
PeripheralManager.swift - peripheral(_:didDiscoverCharacteristicsFor:error:)#284: Enable notify for: 669A9101-0008-968F-E311-6050405558B3
PeripheralManager.swift - peripheral(_:didDiscoverCharacteristicsFor:error:)#289: Notify enabled and ready to start auth flow!
PeripheralManager.swift - writePacket(_:)#61: Writing data: 0e0500000213508a0a544f61b0f600
DeviceDataManager.swift - pumpManager(_:didUpdate:oldStatus:) - 385 DEV: New pump status Bolus: noBolus
DeviceDataManager.swift - pumpManager(_:didUpdate:oldStatus:) - 386 DEV: New pump status Basal: Optional(LoopKit.PumpManagerStatus.BasalDeliveryState.active(0001-01-01 00:00:00 +0000))
DeviceDataManager.swift - pumpManager(_:didUpdate:oldStatus:) - 385 DEV: New pump status Bolus: noBolus
DeviceDataManager.swift - pumpManager(_:didUpdate:oldStatus:) - 386 DEV: New pump status Basal: Optional(LoopKit.PumpManagerStatus.BasalDeliveryState.active(0001-01-01 00:00:00 +0000))
PeripheralManager.swift - peripheral(_:didUpdateValueFor:error:)#330: Got data: 1005000000000258015057045706005200
PeripheralManager.swift - writePacket(_:)#61: Writing data: 050b0100b700
PeripheralManager.swift - peripheral(_:didUpdateValueFor:error:)#330: Got data: 0d0b01000000d4a40a16b4005d00
PeripheralManager.swift - writePacket(_:)#61: Writing data: 05030200d000
PeripheralManager.swift - peripheral(_:didUpdateValueFor:error:)#330: Got data: 17030201000006a005850a791b5a0100e00095d1
PeripheralManager.swift - peripheral(_:didUpdateValueFor:error:)#330: Got data: 1703020204000074a8
PeripheralManager.swift - parseStateUpdate(_:)#219: State update: {"patchAge":1173,"storage":{"sequence":1,"patchId":224},"state":6,"activeAlarms":[],"reservoir":134.65,"battery":{"voltageA":5.736328125,"voltageB":2.814453125}}
PeripheralManager.swift - writePacket(_:)#61: Writing data: 07040300ff0fa900
DeviceDataManager.swift - pumpManager(_:didUpdate:oldStatus:) - 385 DEV: New pump status Bolus: noBolus
DeviceDataManager.swift - pumpManager(_:didUpdate:oldStatus:) - 386 DEV: New pump status Basal: Optional(LoopKit.PumpManagerStatus.BasalDeliveryState.active(0001-01-01 00:00:00 +0000))
PeripheralManager.swift - peripheral(_:didUpdateValueFor:error:)#330: Got data: 070403000000f600
PeripheralManager.swift - subscribe()#208: Connected to pump!
PeripheralManager.swift - writePacket(_:)#61: Writing data: 17120401000c010600001e9001d007000001012e
DeviceDataManager.swift - pumpManager(_:didUpdate:oldStatus:) - 385 DEV: New pump status Bolus: noBolus
PeripheralManager.swift - writePacket(_:)#61: Writing data: 171204020040011051
DeviceDataManager.swift - pumpManager(_:didUpdate:oldStatus:) - 386 DEV: New pump status Basal: Optional(LoopKit.PumpManagerStatus.BasalDeliveryState.active(0001-01-01 00:00:00 +0000))
PeripheralManager.swift - peripheral(_:didUpdateValueFor:error:)#330: Got data: 1a1204010000e0000000dba40a160114000100d2
PeripheralManager.swift - peripheral(_:didUpdateValueFor:error:)#313: READ -> Got data: 204010dba40a160000000000
PeripheralManager.swift - parseStateUpdate(_:)#219: State update: {"startTime":780023515,"state":32,"activeAlarms":[]}
DeviceDataManager.swift - pumpManager(_:didUpdate:oldStatus:) - 385 DEV: New pump status Bolus: noBolus
DeviceDataManager.swift - pumpManager(_:didUpdate:oldStatus:) - 386 DEV: New pump status Basal: Optional(LoopKit.PumpManagerStatus.BasalDeliveryState.active(0001-01-01 00:00:00 +0000))
BluetoothManager.swift - startTimeout(seconds:)#133: Failed to connect: Timeout reached...
DeviceDataManager.swift - pumpManager(_:didUpdate:oldStatus:) - 385 DEV: New pump status Bolus: noBolus
MedtrumPumpManager.swift - activatePatch(_:)#692: Failed to connect to pump: failedToConnectToDevice
DeviceDataManager.swift - pumpManager(_:didUpdate:oldStatus:) - 386 DEV: New pump status Basal: Optional(LoopKit.PumpManagerStatus.BasalDeliveryState.active(0001-01-01 00:00:00 +0000))
PeripheralManager.swift - peripheral(_:didUpdateValueFor:error:)#330: Got data: 1a120402e000dba40a167133
MedtrumPumpManager.swift - activatePatch(_:)#745: Patch activated!
DeviceDataManager.swift - pumpManager(_:hasNewPumpEvents:lastReconciliation:replacePendingEvents:completion:) - 464 DEV: New pump events:
Patch replace
NotificationManager.swift - addRequest(identifier:content:triggerAfter:deleteOld:)#117: sending com.nightscout.medtrumkit.patch-expired notification
DeviceDataManager.swift - pumpManagerPumpWasReplaced(_:) - 515 DEV: Pump hardware was replaced
DeviceDataManager.swift - pumpManager(_:didUpdate:oldStatus:) - 385 DEV: New pump status Bolus: noBolus
DeviceDataManager.swift - pumpManager(_:didUpdate:oldStatus:) - 386 DEV: New pump status Basal: Optional(LoopKit.PumpManagerStatus.BasalDeliveryState.active(0001-01-01 00:00:00 +0000))
UIScrollView does not support multiple observers implementing _observeScrollView:willEndDraggingWithVelocity:targetContentOffset:unclampedOriginalTarget:. Scroll view <SwiftUI.UpdateCoalescingCollectionView: 0x155b8dc00; baseClass = UICollectionView; frame = (0 0; 430 800.333); clipsToBounds = YES; autoresize = W+H; gestureRecognizers = <NSArray: 0x155c56bb0>; backgroundColor = <UIDynamicSystemColor: 0x1547d23c0; name = systemBackgroundColor>; layer = <CALayer: 0x1555602a0>; contentOffset: {0, -44}; contentSize: {0, 0}; adjustedContentInset: {44, 0, 0, 0}; layout: <UICollectionViewCompositionalLayout: 0x155a4e800>; dataSource: <_TtGC7SwiftUI31UICollectionViewListCoordinatorGVS_28CollectionViewListDataSourceOs5Never_GOS_19SelectionManagerBoxS2___: 0x155bf4c00>>, new observer <SwiftUI.UIKitNavigationController: 0x1550b1500>, removing old observer <MedtrumKit.MedtrumKitUICoordinator: 0x1550b1c00>
UIScrollView does not support multiple observers implementing _observeScrollView:willEndDraggingWithVelocity:targetContentOffset:unclampedOriginalTarget:. Scroll view <SwiftUI.UpdateCoalescingCollectionView: 0x155b8dc00; baseClass = UICollectionView; frame = (0 0; 430 800.333); clipsToBounds = YES; autoresize = W+H; gestureRecognizers = <NSArray: 0x155c56bb0>; backgroundColor = <UIDynamicSystemColor: 0x1547d23c0; name = systemBackgroundColor>; layer = <CALayer: 0x1555602a0>; contentOffset: {0, -44}; contentSize: {0, 0}; adjustedContentInset: {44, 0, 0, 0}; layout: <UICollectionViewCompositionalLayout: 0x155a4e800>; dataSource: <_TtGC7SwiftUI31UICollectionViewListCoordinatorGVS_28CollectionViewListDataSourceOs5Never_GOS_19SelectionManagerBoxS2___: 0x155bf4c00>>, new observer <MedtrumKit.MedtrumKitUICoordinator: 0x1550b1c00>, removing old observer <SwiftUI.UIKitNavigationController: 0x1550b1500>
MedtrumPumpManager.swift - syncPumpData(completion:)#205: Sync pump data
PeripheralManager.swift - writePacket(_:)#61: Writing data: 05030500b200
PeripheralManager.swift - peripheral(_:didUpdateValueFor:error:)#330: Got data: 2f030501000020ee0d800000800000010100e0e9
PeripheralManager.swift - peripheral(_:didUpdateValueFor:error:)#330: Got data: 2f03050200dba40a16140000850adba40a1679cc
PeripheralManager.swift - peripheral(_:didUpdateValueFor:error:)#330: Got data: 2f0305031b5a0100e000ae040000850a388a
MedtrumPumpManager.swift - syncPumpData(completion:)#245: Manual sync: {"reservoir":134.65,"startTime":780023515,"storage":{"patchId":224,"sequence":1},"battery":{"voltageA":5.736328125,"voltageB":2.814453125},"activeAlarms":[],"patchAge":1198,"state":32,"magnetoPlacement":2693,"bolus":{"type":0,"delivered":0,"completed":true},"basal":{"type":1,"patchId":224,"startTime":780023515,"sequence":1,"rate":1,"delivery":0}}
DeviceDataManager.swift - pumpManager(_:didReadReservoirValue:at:completion:) - 487 DEV: Reservoir Value 134.7, at: 2025-09-20 01:12:18 +0000
DeviceDataManager.swift - pumpManager(_:didUpdate:oldStatus:) - 385 DEV: New pump status Bolus: noBolus
DeviceDataManager.swift - pumpManager(_:didUpdate:oldStatus:) - 386 DEV: New pump status Basal: Optional(LoopKit.PumpManagerStatus.BasalDeliveryState.active(0001-01-01 00:00:00 +0000))
App is being debugged, do not track this hang
Hang detected: 0.49s (debugger attached, not reporting)
FreeAPSApp.swift - body - 53 DEV: APPLICATION PHASE: inactive
FetchGlucoseManager.swift - subscribe() - 63 DEV: FetchGlucoseManager heartbeat
FetchGlucoseManager.swift - subscribe() - 64 DEV: Start fetching glucose
FetchTreatmentsManager.swift - subscribe() - 26 DEV: FetchTreatmentsManager heartbeat
FetchTreatmentsManager.swift - subscribe() - 27 DEV: Start fetching carbs and temptargets
NetworkService.swift - run(_:) - 17 DEV: GET  ***/api/v1/treatments.json?find%5Bcarbs%5D%5B$exists%5D=true&find%5BenteredBy%5D%5B$ne%5D=freeaps-x&find%5BenteredBy%5D%5B$ne%5D=freeaps-x&find%5Bcreated_at%5D%5B$gt%5D=2025-09-19T01:12:29.682Z
NetworkService.swift - run(_:) - 17 DEV: GET  ***/api/v1/treatments.json?find%5BeventType%5D=Temporary+Target&find%5BenteredBy%5D%5B$ne%5D=freeaps-x&find%5BenteredBy%5D%5B$ne%5D=freeaps-x&find%5Bduration%5D%5B$exists%5D=true&find%5Bcreated_at%5D%5B$gt%5D=2025-09-19T01:12:29.686Z
HealthKitManager.swift - fetch() - 298 DEV: Start fetching HealthKitManager
HealthKitManager.swift - fetch() - 300 DEV: HealthKitManager cant return any data, because useAppleHealth option is disable
FetchGlucoseManager.swift - subscribe() - 75 DEV: SyncDate is 2025-09-20 01:03:03 +0000
FreeAPSApp.swift - body - 53 DEV: APPLICATION PHASE: background