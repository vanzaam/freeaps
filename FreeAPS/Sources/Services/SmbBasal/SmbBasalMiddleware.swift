import Foundation
import Swinject

// MARK: - SMB-Basal Middleware Manager

protocol SmbBasalMiddleware: AnyObject {
    func setupMiddleware()
    func removeMiddleware()
}

final class BaseSmbBasalMiddleware: SmbBasalMiddleware, Injectable {
    @Injected() private var storage: FileStorage!
    @Injected() private var settingsManager: SettingsManager!

    private let resolver: Resolver

    init(resolver: Resolver) {
        self.resolver = resolver
        injectServices(resolver)
    }

    func setupMiddleware() {
        let middlewareScript = createSmbBasalMiddleware()
        storage.save(middlewareScript, as: OpenAPS.Middleware.determineBasal)

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—à IOB —Ä–∞—Å—á–µ—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ middleware
        updateCustomIOBForMiddleware()

        print("SMB-Basal: Middleware installed successfully")
    }

    // üéØ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è Custom IOB –¥–∞–Ω–Ω—ã—Ö –≤ FileStorage
    private struct CustomIOBData: JSON {
        let totalIOB: Double
        let bolusIOB: Double
        let basalIOB: Double
        let calculationTime: Double
        let debugInfo: String
    }

    func updateCustomIOBForMiddleware() {
        // –°–æ–∑–¥–∞–µ–º CustomIOBCalculator —á–µ—Ä–µ–∑ resolver, –∏–∑–±–µ–≥–∞—è —Ü–∏–∫–ª–∏—á–µ—Å–∫—É—é –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å
        guard let customIOBCalculator = resolver.resolve(CustomIOBCalculator.self) else {
            print("SMB-Basal: Cannot resolve CustomIOBCalculator")
            return
        }

        let iobResult = customIOBCalculator.calculateIOB()

        let customIOBData = CustomIOBData(
            totalIOB: Double(truncating: iobResult.totalIOB as NSNumber),
            bolusIOB: Double(truncating: iobResult.bolusIOB as NSNumber),
            basalIOB: Double(truncating: iobResult.basalIOB as NSNumber),
            calculationTime: iobResult.calculationTime.timeIntervalSince1970,
            debugInfo: iobResult.debugInfo
        )

        print("SMB-Basal: üîÑ Attempting to save Custom IOB data...")

        // üöÄ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ò—Å–ø–æ–ª—å–∑—É–µ–º transaction –¥–ª—è –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
        storage.transaction { storage in
            storage.save(customIOBData, as: "middleware/custom-iob.json")
            print("SMB-Basal: ‚úÖ Data saved in transaction")
        }

        print("SMB-Basal: Custom IOB saved for middleware - Total: \(iobResult.totalIOB)U")
        print(
            "SMB-Basal: Saved to middleware/custom-iob.json: totalIOB=\(customIOBData.totalIOB), calculationTime=\(customIOBData.calculationTime)"
        )

        // üîç –î–ï–¢–ê–õ–¨–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
        DispatchQueue.global().asyncAfter(deadline: .now() + 0.1) {
            if let savedData = self.storage.retrieve("middleware/custom-iob.json", as: CustomIOBData.self) {
                print("SMB-Basal: ‚úÖ Verification SUCCESS - data saved as CustomIOBData struct!")
                print("SMB-Basal: ‚úÖ Verified IOB: \(savedData.totalIOB)U")
            } else if let rawData = self.storage.retrieveRaw("middleware/custom-iob.json") {
                print("SMB-Basal: ‚ö†Ô∏è Data exists as raw but failed as struct: \(String(rawData.prefix(100)))")
            } else {
                print("SMB-Basal: ‚ùå Verification FAILED - no data found at all!")

                // üîç –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ - –ø–æ–ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞
                self.storage.save(customIOBData, as: "custom-iob-backup.json")
                if let backupData = self.storage.retrieve("custom-iob-backup.json", as: CustomIOBData.self) {
                    print("SMB-Basal: üÜò BACKUP saved successfully - problem with middleware/ path!")
                }
            }
        }
    }

    func removeMiddleware() {
        storage.remove(OpenAPS.Middleware.determineBasal)
        print("SMB-Basal: Middleware removed")
    }

    private func createSmbBasalMiddleware() -> String {
        """
            function middleware(iob, currenttemp, glucose, profile, autosens, meal, reservoir, clock) {
                console.log("SMB-Basal Middleware: üéØ –ê–†–•–ò–¢–ï–ö–¢–£–†–ù–û–ï –†–ï–®–ï–ù–ò–ï –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏–∑—É—á–µ–Ω–∏—è OpenAPS oref0!");
                console.log("–ü—Ä–æ–±–ª–µ–º–∞: –ß–∞—Å—Ç–∏—á–Ω–∞—è –∑–∞–º–µ–Ω–∞ IOB –ø–æ–ª–µ–π —Å–æ–∑–¥–∞–≤–∞–ª–∞ –Ω–µ—Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É");
                console.log("–†–µ—à–µ–Ω–∏–µ: –ü–æ–ª–Ω–∞—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞ IOB —Å–æ–≥–ª–∞—Å–Ω–æ oref0 –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–µ");

                // üéØ –í–ê–ñ–ù–û: Middleware —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ JavaScript –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ

                var middlewareMessage = "SMB-Basal Middleware: No changes needed";

            // üéØ –ï–î–ò–ù–°–¢–í–ï–ù–ù–ê–Ø –ó–ê–î–ê–ß–ê - –ó–ê–ú–ï–ù–ò–¢–¨ IOB –ü–ê–†–ê–ú–ï–¢–† –ù–ê –ù–ê–® –†–ê–°–ß–ï–¢!
            if (typeof customIOBData !== 'undefined' && customIOBData && customIOBData.totalIOB !== undefined) {
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–æ–∑—Ä–∞—Å—Ç –¥–∞–Ω–Ω—ã—Ö (–º–∞–∫—Å–∏–º—É–º 5 –º–∏–Ω—É—Ç)
                var now = new Date().getTime() / 1000;
                var dataAge = now - customIOBData.calculationTime;

                if (dataAge < 300) { // 5 –º–∏–Ω—É—Ç
                    console.log("SMB-Basal Middleware: ‚úÖ –ó–∞–º–µ–Ω—è–µ–º IOB –∑–Ω–∞—á–µ–Ω–∏—è, –°–û–•–†–ê–ù–Ø–Ø –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É!");
                    console.log("  –°–∏—Å—Ç–µ–º–Ω—ã–π IOB: " + JSON.stringify(iob));

                    // üéØ –ü–†–û–°–¢–û–ï –†–ï–®–ï–ù–ò–ï: –ê–∫–∫—É—Ä–∞—Ç–Ω–∞—è –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π IOB —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
                    if (iob && Array.isArray(iob) && iob.length > 0) {
                        console.log("  –°–∏—Å—Ç–µ–º–Ω—ã–π IOB –º–∞—Å—Å–∏–≤: " + iob.length + " —ç–ª–µ–º–µ–Ω—Ç–æ–≤");

                        var originalIOB = iob[0];
                        console.log("  –°—Ç–∞—Ä—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è: iob=" + originalIOB.iob + ", basaliob=" + originalIOB.basaliob + ", bolusiob=" + originalIOB.bolusiob);

                        // –ê–∫–∫—É—Ä–∞—Ç–Ω–æ –∑–∞–º–µ–Ω—è–µ–º —Ç–æ–ª—å–∫–æ –∫–ª—é—á–µ–≤—ã–µ IOB –ø–æ–ª—è, —Å–æ—Ö—Ä–∞–Ω—è—è —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–ª—è Swift
                        originalIOB.iob = customIOBData.totalIOB;
                        originalIOB.basaliob = customIOBData.basalIOB;
                        originalIOB.bolusiob = customIOBData.bolusIOB;

                        // –°–æ–≥–ª–∞—Å—É–µ–º –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è —Å –Ω–∞—à–∏–º–∏ IOB –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
                        if (customIOBData.totalIOB > 0) {
                            originalIOB.activity = Math.abs(customIOBData.totalIOB * 0.0025); // –†–∞–∑—É–º–Ω–∞—è activity
                            originalIOB.netbasalinsulin = customIOBData.basalIOB;
                            originalIOB.bolusinsulin = customIOBData.bolusIOB;
                        }

                        // –£–±–∏—Ä–∞–µ–º iobWithZeroTemp —á—Ç–æ–±—ã oref0 –ø–µ—Ä–µ—Å—á–∏—Ç–∞–ª –µ–≥–æ —Å –Ω–∞—à–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏
                        originalIOB.iobWithZeroTemp = null;

                        console.log("SMB-Basal Middleware: üöÄ IOB –ó–ù–ê–ß–ï–ù–ò–Ø –°–û–ì–õ–ê–°–û–í–ê–ù–´ –í –û–†–ò–ì–ò–ù–ê–õ–¨–ù–û–ô –°–¢–†–£–ö–¢–£–†–ï!");
                        console.log("  –ù–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è: iob=" + originalIOB.iob + ", basaliob=" + originalIOB.basaliob + ", bolusiob=" + originalIOB.bolusiob);
                        console.log("  –°–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω–∞—è activity: " + originalIOB.activity);
                        console.log("  –°–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω—ã–µ –∏–Ω—Å—É–ª–∏–Ω—ã: netbasal=" + originalIOB.netbasalinsulin + ", bolus=" + originalIOB.bolusinsulin);

                        // üîç –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –ß—Ç–æ –º—ã –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≤ Swift?
                        console.log("üîç –ü–û–õ–ù–ê–Ø –°–¢–†–£–ö–¢–£–†–ê IOB[0] –ø–æ—Å–ª–µ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏:");
                        console.log(JSON.stringify(originalIOB, null, 2));
                        console.log("üîç –¢–∏–ø—ã –ø–æ–ª–µ–π:");
                        console.log("  typeof iob: " + typeof originalIOB.iob);
                        console.log("  typeof basaliob: " + typeof originalIOB.basaliob);  
                        console.log("  typeof bolusiob: " + typeof originalIOB.bolusiob);
                        console.log("  typeof activity: " + typeof originalIOB.activity);
                        console.log("  typeof time: " + typeof originalIOB.time);
                        console.log("  iobWithZeroTemp: " + originalIOB.iobWithZeroTemp);

                        // ‚úÖ IOB –¥–∞–Ω–Ω—ã–µ –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω—ã —Ç–æ–ª—å–∫–æ –¥–ª—è JavaScript - Swift —á–∏—Ç–∞–µ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ
                    }

                    middlewareMessage = "Custom IOB calculation active";
                } else {
                    console.log("SMB-Basal Middleware: Custom IOB data too old (" + Math.round(dataAge) + "s)");
                }
            } else {
                console.log("SMB-Basal Middleware: Custom IOB data not available");
            }

            return middlewareMessage;
        }

        """
    }
}
