---
description: Nightscout integration
globs: ["**/Nightscout*.swift", "**/Network*.swift"]
alwaysApply: false
---

# Nightscout Integration

## Connection Testing
- Use direct API testing over queue-based testing for connection verification
- Use nightscoutAPI.checkConnection() for immediate connection testing
- Avoid relying solely on queue-based testing for connection status
- Implement proper timeout handling for connection tests

## Queue Management
- EnhancedNightscoutQueueManager has cooldowns - tasks like .treatments have 45-second cooldown
- Respect queue cooldown periods to avoid overwhelming the server
- Use appropriate queue priorities for different data types
- Handle queue failures gracefully with retry logic

## API Security
- API secret must be SHA1 hashed and sent in 'api-secret' header
- Use Keychain storage for URL and API secret with proper error handling
- Never store API credentials in plain text
- Validate API credentials before making requests

## Data Synchronization
- Implement proper error handling for failed sync operations
- Use appropriate retry strategies for transient failures
- Handle network connectivity issues gracefully
- Provide user feedback for sync status and errors

## Best Practices
- Use URLSession.shared.dataTaskPublisher with Combine for async operations
- Implement proper timeout handling for network requests
- Validate response data before processing
- Handle rate limiting and server errors appropriately
- Log network operations for debugging purposes